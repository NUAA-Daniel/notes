connection
在nginx中connection就是对tcp连接的封装，其中包括连接的socket，读事件，写事件。
利用nginx封装的connection，我们可以很方便的使用nginx来处理与连接相关的事情，比如，建立连接，发送与接受数据等。
而nginx中的http请求的处理就是建立在connection之上的，所以nginx不仅可以作为一个web服务器，也可以作为邮件服务器。
当然，利用nginx提供的connection，我们可以与任何后端服务打交道。

request
在nginx中我们指的是http请求，具体到nginx中的数据结构是ngx_http_request_t。
ngx_http_request_t是对一个http请求的封装。 
我们知道，一个http请求，包含请求行、请求头、请求体、响应行、响应头、响应体。

keepalive与长连接
http请求是基于TCP协议之上的，那么，当客户端在发起请求前，需要先与服务端建立TCP连接，
而每一次的TCP连接是需要三次握手来确定的，如果客户端与服务端之间网络差一点，这三次交互消费的时间会比较多
而且三次交互也会带来网络流量。当然，当连接断开后，也会有四次的交互，当然对用户体验来说就不重要了。
而http请求是请求应答式的，如果我们能知道每个请求头与响应体的长度，那么我们是可以在一个连接上面执行多个请求的，这就是所谓的长连接

pipe
pipeline也是基于长连接的，目的就是利用一个连接做多次请求
nginx是直接支持pipeline的，但是，nginx对pipeline中的多个请求的处理却不是并行的，
依然是一个请求接一个请求的处理，只是在处理第一个请求的时候，客户端就可以发起第二个请求。
这样，nginx利用pipeline减少了处理完一个请求后，等待第二个请求的请求头数据的时间。
其实nginx的做法很简单，前面说到，nginx在读取数据时，会将读取的数据放到一个buffer里面，
所以，如果nginx在处理完前一个请求后，如果发现buffer里面还有数据，就认为剩下的数据是下一个请求的开始，
然后就接下来处理下一个请求，否则就设置keepalive。

lingering_close
lingering_close，字面意思就是延迟关闭，也就是说，当nginx要关闭连接时，并非立即关闭连接，而是先关闭tcp连接的写，再等待一段时间后再关掉连接的读。
